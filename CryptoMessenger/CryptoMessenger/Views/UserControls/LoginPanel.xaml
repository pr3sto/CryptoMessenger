<UserControl 
    x:Class="CryptoMessenger.Views.UserControls.LoginPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:local="clr-namespace:CryptoMessenger.Views.UserControls"
    xmlns:props="clr-namespace:CryptoMessenger.Properties"    
    xmlns:extensions="clr-namespace:CryptoMessenger.Extensions"  
    >

    <Grid Height="460" Width="740" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="104"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="33"/>
            <RowDefinition Height="14"/>
            <RowDefinition Height="33"/>
            <RowDefinition Height="14"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="110"/>
        </Grid.RowDefinitions>

        <!-- logo -->
        <Canvas Grid.Row="1">
            <Image
                Canvas.Bottom="2"
                Canvas.Left="320"
                Height="100"
                Source="/CryptoMessenger;component/Resources/icon.ico"
                />
            <!-- loading indicator -->
            <Ellipse
                Canvas.Bottom="1"
                Canvas.Left="319"
                Width="102"
                Height="102"
                Stroke="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}" 
                StrokeThickness="2"            
                />
            <Ellipse
                Width="6"
                Height="6"
                Fill="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}" 
                Visibility="{Binding Path=IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"            
                >
                <!-- animation -->
                <Ellipse.Style>
                    <Style TargetType="Ellipse">
                        <Style.Triggers>
                            <Trigger Property="IsVisible" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="Storyboard">
                                        <Storyboard>
                                            <MatrixAnimationUsingPath
                                                Storyboard.TargetProperty="RenderTransform.(MatrixTransform.Matrix)"
                                                Duration="0:0:1.5"
                                                RepeatBehavior="Forever"
                                                DoesRotateWithTangent="True"
                                                >
                                                <MatrixAnimationUsingPath.PathGeometry>
                                                    <PathGeometry Figures="M 370,105 A 53,53 1 1 1 370.0001,105" />
                                                </MatrixAnimationUsingPath.PathGeometry>
                                            </MatrixAnimationUsingPath>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="Storyboard"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
        </Canvas>

        <!-- notification label -->
        <TextBlock
            Grid.Row="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            TextOptions.TextRenderingMode="ClearType"
            TextOptions.TextFormattingMode="Display"
            FontSize="17"
            Foreground="White"
            Text="{Binding Notification}"
            />

        <!-- login -->
        <TextBox
            Grid.Row="3"
            Style="{StaticResource TextBoxStyle}"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Width="300"
            Height="33"
            BorderThickness="2"
            FontSize="17"
            MaxLength="30"
            Text="{Binding Path=Login, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Tag="{Binding Source={x:Static props:Resources.UsernameTextboxPlaceholder}}"
            TabIndex="1"
            IsTabStop="True"
            IsEnabled="{Binding Path=IsLoading, Converter={StaticResource InverseBooleanConverter}}"
            extensions:Extensions.IsDataIncorrect="{Binding IsLoginIncorrect}"
            extensions:Extensions.IsDataCorrect="{Binding IsLoginCorrect}"
            >
            <!-- login on enter click -->
            <TextBox.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding LoginCommand}"
                            CommandParameter="{Binding ElementName=password}"/>
            </TextBox.InputBindings>
            <!-- clear notifications on focus -->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <i:InvokeCommandAction Command="{Binding TextBoxGotFocusCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <!-- password -->
        <PasswordBox
            x:Name="password"
            Grid.Row="5"
            Style="{StaticResource PasswordBoxStyle}"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Width="300"
            Height="33"
            BorderThickness="2"
            FontSize="17"
            MaxLength="30"
            Tag="{Binding Source={x:Static props:Resources.UserPasswordTextboxPlaceholder}}"
            TabIndex="2"
            IsTabStop="True"
            IsEnabled="{Binding Path=IsLoading, Converter={StaticResource InverseBooleanConverter}}"
            extensions:Extensions.IsDataIncorrect="{Binding IsPasswordIncorrect}"
            extensions:Extensions.IsDataCorrect="{Binding IsPasswordCorrect}"
            >
            <!-- login on enter click -->
            <PasswordBox.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding LoginCommand}"
                            CommandParameter="{Binding ElementName=password}"/>
            </PasswordBox.InputBindings>
            <!-- clear notifications on focus -->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <i:InvokeCommandAction Command="{Binding TextBoxGotFocusCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </PasswordBox>

        <!-- login button -->
        <Button
            Grid.Row="7"
            Style="{StaticResource ButtonStyle}"
            Cursor="Hand"
            VerticalAlignment="Top"
            Margin="220,0,0,0"
            HorizontalAlignment="Left"
            Height="40" Width="143"
            FontSize="17"
            HorizontalContentAlignment="Right"
            VerticalContentAlignment="Center"
            Content="{Binding Source={x:Static props:Resources.LoginButtonText}}"
            IsTabStop="False"
            Command="{Binding LoginCommand}"
            CommandParameter="{Binding ElementName=password}"
            IsEnabled="{Binding Path=IsLoading, Converter={StaticResource InverseBooleanConverter}}"
            >
            <Button.Background>
                <ImageBrush ImageSource="/CryptoMessenger;component/Resources/login.png"/>
            </Button.Background>
        </Button>

        <!-- registration button -->
        <Button
            Grid.Row="7"
            Margin="0,0,220,0"
            Style="{StaticResource ButtonStyle}"
            Cursor="Hand"
            VerticalAlignment="Top"
            HorizontalAlignment="Right"
            Height="40" Width="143"
            FontSize="17"
            HorizontalContentAlignment="Right"
            VerticalContentAlignment="Center"
            Content="{Binding Source={x:Static props:Resources.RegistrationButtonText}}"
            IsTabStop="False"
            Command="{Binding RegisterCommand}"
            CommandParameter="{Binding ElementName=password}"
            IsEnabled="{Binding Path=IsLoading, Converter={StaticResource InverseBooleanConverter}}"
            >
            <Button.Background>
                <ImageBrush ImageSource="/CryptoMessenger;component/Resources/register.png"/>
            </Button.Background>
        </Button>

        <!-- wait cursor while loading -->
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsLoading}" Value="True">
                        <Setter Property="Cursor" Value="Wait" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
    </Grid>
</UserControl>
