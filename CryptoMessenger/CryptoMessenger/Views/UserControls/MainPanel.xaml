<UserControl 
    x:Class="CryptoMessenger.Views.UserControls.MainPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:local="clr-namespace:CryptoMessenger.Views.UserControls"
    xmlns:props="clr-namespace:CryptoMessenger.Properties"
    xmlns:extensions="clr-namespace:CryptoMessenger.Extensions"
    xmlns:viewmodels="clr-namespace:CryptoMessenger.ViewModels"
    >

    <UserControl.Resources>
        <!-- panels -->
        <DataTemplate DataType="{x:Type viewmodels:FriendsPanelViewModel}">
            <local:FriendsPanel />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:RequestsPanelViewModel}">
            <local:RequestsPanel />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:SearchPanelViewModel}">
            <local:SearchPanel />
        </DataTemplate>

        <!-- animation storyboards -->
        <Storyboard x:Key="st_reqs">
            <DoubleAnimation 
                Storyboard.TargetName="dot"
                Storyboard.TargetProperty="(Canvas.Left)" 
                To="17" Duration="00:00:0.5"
                />
        </Storyboard>
        <Storyboard x:Key="st_friends">
            <DoubleAnimation 
                Storyboard.TargetName="dot"
                Storyboard.TargetProperty="(Canvas.Left)" 
                To="122" Duration="00:00:0.5"
                />
        </Storyboard>
        <Storyboard x:Key="st_search">
            <DoubleAnimation 
                Storyboard.TargetName="dot"
                Storyboard.TargetProperty="(Canvas.Left)" 
                To="237" Duration="00:00:0.5"
                />
        </Storyboard>

        <!-- button style -->
        <Style x:Key="LeftPanelButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding Path=SecondarySecondBrush, Source={x:Static props:Settings.Default}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter 
                            Margin="0,0,0,0"
                            TextOptions.TextRenderingMode="ClearType"
                            TextOptions.TextFormattingMode="Display"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            Content="{TemplateBinding Content}" 
                            />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- mouse hover -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" 
                        Value="{Binding Path=SecondaryFirstBrush, Source={x:Static props:Settings.Default}}"/>
                </Trigger>
                <!-- mouse pressed -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" 
                        Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                </Trigger>
                <!-- textblock selected -->
                <Trigger Property="extensions:Extensions.ElementSelected" Value="True">
                    <Setter Property="Foreground" 
                        Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <!-- content -->
    <Grid Height="460" Width="740" Background="Transparent">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250">
            </ColumnDefinition>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="10"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!-- left panel buttons -->
        <Button
            Grid.Row="0"
            Grid.Column="0"
            Style="{StaticResource LeftPanelButtonStyle}"
            Cursor="Hand"
            Margin="20,0,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Content="{Binding Source={x:Static props:Resources.RequestTextblockText}}"
            extensions:Extensions.ElementSelected="{Binding RequestsButtonSelected}"
            Command="{Binding RequestsTextBlockClickedCommand}"
            >
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard Storyboard="{StaticResource st_reqs}"/>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button
            Grid.Row="0"
            Grid.Column="0"
            Style="{StaticResource LeftPanelButtonStyle}"
            Cursor="Hand"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Content="{Binding Source={x:Static props:Resources.FriendsTextboxText}}"
            extensions:Extensions.ElementSelected="{Binding FriendsButtonSelected}"
            Command="{Binding FriendsTextBlockClickedCommand}"
            >
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard Storyboard="{StaticResource st_friends}"/>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button
            Grid.Row="0"
            Grid.Column="0"
            Style="{StaticResource LeftPanelButtonStyle}"
            Cursor="Hand"
            Margin="0,0,10,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Content="{Binding Source={x:Static props:Resources.SearchTextblockText}}"
            extensions:Extensions.ElementSelected="{Binding SearchButtonSelected}"
            Command="{Binding SearchTextBlockClickedCommand}"
            >
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard Storyboard="{StaticResource st_search}"/>
                </EventTrigger>
            </Button.Triggers>
        </Button>

        <!-- line -->
        <Canvas 
            Grid.Row="1"
            Grid.Column="0"
            >
            <Line
                Stroke="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"
                StrokeThickness="2"
                X1="20" X2="240"
                Y1="5" Y2="5"
                />
            <!-- indicator -->
            <Ellipse
                x:Name="dot"
                Width="6"
                Height="6"
                Fill="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}" 
                Canvas.Left="122"
                Canvas.Top="2"
                />
        </Canvas>
        
        <!-- account -->
        <Grid
            Grid.Row="0"
            Grid.Column="1"
            Margin="0,0,20,0"
            HorizontalAlignment="Right"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                Margin="0,0,10,0"
                VerticalAlignment="Center"
                TextOptions.TextRenderingMode="ClearType"
                TextOptions.TextFormattingMode="Display"
                Foreground="{Binding Path=SecondarySecondBrush, Source={x:Static props:Settings.Default}}"
                Text="{Binding Login}"
                />
            <TextBlock
                x:Name="statusTextBlock"
                Grid.Column="1"
                Margin="0,0,10,0"
                VerticalAlignment="Center"
                TextOptions.TextRenderingMode="ClearType"
                TextOptions.TextFormattingMode="Display"
                FontSize="11"
                >
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <!-- online status -->
                            <DataTrigger Binding="{Binding IsOnline}" Value="True">
                                <Setter Property="Foreground" 
                                        Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                                <Setter Property="Text" 
                                        Value="{Binding Source={x:Static props:Resources.StatusOnlineText}}"/>
                            </DataTrigger>
                            <!-- offline status -->
                            <DataTrigger Binding="{Binding Path=IsOnline, Converter={StaticResource InverseBooleanConverter}}" Value="True">
                                <Setter Property="Foreground" 
                                        Value="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"/>
                                <Setter Property="Text" 
                                        Value="{Binding Source={x:Static props:Resources.StatusOfflineText}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Button
                Grid.Column="2"
                Style="{StaticResource LeftPanelButtonStyle}"
                Cursor="Hand"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Content="{Binding Source={x:Static props:Resources.ExitButtonText}}"
                Command="{Binding LogoutCommand}"
                />
        </Grid>

        <Canvas 
            Grid.Row="1"
            Grid.Column="1"
            >
            <Line
                Stroke="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"
                StrokeThickness="2"
                X1="10" X2="470"
                Y1="5" Y2="5"
                />
        </Canvas>

        <!-- select friend notify -->
        <TextBlock  
            Grid.Column="1"
            Grid.Row="2"
            Width="200"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            TextOptions.TextRenderingMode="ClearType"
            TextOptions.TextFormattingMode="Display"
            FontSize="20" 
            Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
            TextWrapping="Wrap"
            TextAlignment="Center"
            Text="{Binding Source={x:Static props:Resources.SelectFriendNotification}}"
            Visibility="Visible"
            />

        <!-- panel -->
        <ContentControl 
            Grid.Column="0"
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Grid.RowSpan="3"
            Content="{Binding WindowPanel}" 
            />
    </Grid>
</UserControl>
