<UserControl 
    x:Class="CryptoMessenger.Views.UserControls.MainPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:local="clr-namespace:CryptoMessenger.Views.UserControls"
    xmlns:props="clr-namespace:CryptoMessenger.Properties"
    xmlns:extensions="clr-namespace:CryptoMessenger.Extensions"
    xmlns:viewmodels="clr-namespace:CryptoMessenger.ViewModels"
    >

    <UserControl.Resources>
        <!-- panels -->
        <DataTemplate DataType="{x:Type viewmodels:FriendsPanelViewModel}">
            <local:FriendsPanel />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:RequestsPanelViewModel}">
            <local:RequestsPanel />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:SearchPanelViewModel}">
            <local:SearchPanel />
        </DataTemplate>

        <!-- button style -->
        <Style x:Key="LeftPanelButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter 
                            Margin="0,0,0,0"
                            TextOptions.TextRenderingMode="ClearType"
                            TextOptions.TextFormattingMode="Display"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            Content="{TemplateBinding Content}" 
                            />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- mouse hover -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
                </Trigger>
                <!-- mouse pressed -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" 
                        Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                </Trigger>
                <!-- textblock selected -->
                <Trigger Property="extensions:Extensions.ElementSelected" Value="True">
                    <Setter Property="Foreground" 
                        Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <!-- content -->
    <Grid Height="460" Width="740" Background="Transparent">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- borders between panels -->
        <Border 
            Grid.Column="0"
            Grid.Row="0"
            BorderThickness="0 1 0 1"
            BorderBrush="{DynamicResource UISecondaryBrush}"
            Background="{DynamicResource UIPrimaryShadeBrush}"
            />
        <Border 
            Grid.Column="1"
            Grid.Row="0"
            BorderThickness="1 1 0 1"
            BorderBrush="{DynamicResource UISecondaryBrush}"
            Background="{DynamicResource UIPrimaryShadeBrush}"
            />
        <Border 
            Grid.Column="0"
            Grid.Row="1"
            BorderThickness="1 0 0 1"
            BorderBrush="{DynamicResource UIPrimaryShadeBrush}"
            />
        <Border 
            Grid.Column="1"
            Grid.Row="1"
            BorderThickness="1 0 1 1"
            BorderBrush="{DynamicResource UIPrimaryShadeBrush}" 
            />

        <!-- left panel buttons -->
        <Button
            Grid.Row="0"
            Grid.Column="0"
            Style="{StaticResource LeftPanelButtonStyle}"
            Cursor="Hand"
            IsTabStop="False"
            Margin="10,0,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            FontSize="15"
            Content="{Binding Source={x:Static props:Resources.RequestTextblockText}}"
            extensions:Extensions.ElementSelected="{Binding RequestsButtonSelected}"
            Command="{Binding RequestsTextBlockClickedCommand}"
            />
        <Button
            Grid.Row="0"
            Grid.Column="0"
            Style="{StaticResource LeftPanelButtonStyle}"
            Cursor="Hand"
            IsTabStop="False"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="15"
            Content="{Binding Source={x:Static props:Resources.FriendsTextboxText}}"
            extensions:Extensions.ElementSelected="{Binding FriendsButtonSelected}"
            Command="{Binding FriendsTextBlockClickedCommand}"
            />
        <Button
            Grid.Row="0"
            Grid.Column="0"
            Style="{StaticResource LeftPanelButtonStyle}"
            Cursor="Hand"
            IsTabStop="False"
            Margin="0,0,10,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            FontSize="15"
            Content="{Binding Source={x:Static props:Resources.SearchTextblockText}}"
            extensions:Extensions.ElementSelected="{Binding SearchButtonSelected}"
            Command="{Binding SearchTextBlockClickedCommand}"
            />

        <!-- account -->
        <Grid
            Grid.Row="0"
            Grid.Column="1"
            Width="480"
            Margin="0 0 10 0"            
            HorizontalAlignment="Right"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!-- notification -->
            <Button
                Grid.Column="0"
                Margin="10 0 10 0"
                IsTabStop="False"
                Style="{StaticResource LeftPanelButtonStyle}"
                Cursor="Hand"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                extensions:Extensions.ElementSelected="{Binding IsNotificationOpen}"
                Command="{Binding OpenNotificationCommand}"
                >
                <Grid Margin="0,0,0,5" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        TextTrimming="CharacterEllipsis"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display"
                        Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                        Text="{Binding Notification}"
                        />
                    <TextBlock
                        Grid.Column="1"
                        Margin="0,0,10,0"
                        VerticalAlignment="Top"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display"
                        FontSize="10"
                        Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
                        Text="{Binding UnreadNotificationCount}"
                        />
                    <Path
                        Grid.Column="2"                 
                        Margin="0,3,0,0"
                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                        StrokeThickness="1"
                        Stretch="None"
                        RenderOptions.EdgeMode="Aliased"
                        Data="M0,6 L4,10 M4,10 L8,6 M8,6 L 0,6"
                        />
                </Grid>
            </Button>
            <Popup
                Grid.Column="0"
                Margin="0,0,0,0"
                x:Name="notifyPopup" 
                Placement="Bottom" 
                Width="500"
                Height="150"
                AllowsTransparency="True"
                IsOpen="{Binding IsNotificationOpen}"
                StaysOpen="False"
                PopupAnimation="Fade"
                >
                <Grid Margin="5">
                    <Border
                        BorderBrush="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
                        BorderThickness="2"
                        Background="{DynamicResource UIPrimaryBrush}"
                        Opacity="0.7"
                        >
                        <Border.Effect>
                            <DropShadowEffect
                                Color="Black"
                                BlurRadius="3"
                                ShadowDepth="0"
                                />
                        </Border.Effect>
                    </Border>
                    <!-- empty list notify -->
                    <TextBlock
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display"
                        FontSize="22" 
                        FontFamily="/CryptoMessenger;component/Resources/#Roboto Condensed Bold"
                        Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
                        Text="{Binding Source={x:Static props:Resources.EmptyNotificationListboxPlaceholder}}"
                        >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=notifyListbox, Path=Items.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <ListBox
                        x:Name="notifyListbox"
                        Style="{StaticResource ListBoxStyle}"
                        ItemContainerStyle="{StaticResource ListBoxItemStyle}"
                        ItemsSource="{Binding NotificationList}"
                        IsTabStop="False"
                        Margin="5"
                        Background="{DynamicResource UIPrimaryBrush}"
                        HorizontalContentAlignment="Stretch"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,5,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!-- text -->
                                    <Border
                                        Margin="0,0,5,0"
                                        BorderBrush="{DynamicResource UISecondaryBrush}"
                                        BorderThickness="0,0,1,0"
                                        >
                                        <TextBox 
                                            Grid.Column="0"
                                            Margin="0,0,5,0"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Left"
                                            TextOptions.TextRenderingMode="ClearType"
                                            TextOptions.TextFormattingMode="Display"
                                            IsTabStop="False"
                                            Foreground="{DynamicResource TextPrimaryBrush}"
                                            SelectionBrush="{DynamicResource UISecondaryBrush}"
                                            SelectionOpacity="0.5"
                                            Text="{Binding Path=Text, Mode=OneWay}"
                                            TextWrapping="Wrap" 
                                            IsReadOnly="True"
                                            />
                                    </Border>
                                    <!-- time -->
                                    <TextBox
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right"
                                        TextOptions.TextRenderingMode="ClearType"
                                        TextOptions.TextFormattingMode="Display"
                                        IsTabStop="False"
                                        Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
                                        SelectionBrush="{DynamicResource UISecondaryBrush}"
                                        SelectionOpacity="0.5"
                                        Text="{Binding Path=Time, StringFormat='yyyy-MM-dd HH:mm', Mode=OneWay}"
                                        TextWrapping="Wrap" 
                                        IsReadOnly="True"
                                        />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Popup>
            <!-- login -->
            <TextBlock
                Grid.Column="1"
                Margin="0,0,10,0"
                VerticalAlignment="Center"
                TextOptions.TextRenderingMode="ClearType"
                TextOptions.TextFormattingMode="Display"
                Foreground="{DynamicResource TextPrimaryBrush}"
                Text="{Binding Login}"
                />
            <!-- status -->
            <TextBlock
                x:Name="statusTextBlock"
                Grid.Column="2"
                Margin="0,0,10,0"
                VerticalAlignment="Center"
                TextOptions.TextRenderingMode="ClearType"
                TextOptions.TextFormattingMode="Display"
                FontSize="11"
                >
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <!-- online status -->
                            <DataTrigger Binding="{Binding IsOnline}" Value="True">
                                <Setter Property="Foreground" 
                                        Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                                <Setter Property="Text" 
                                        Value="{Binding Source={x:Static props:Resources.StatusOnlineText}}"/>
                            </DataTrigger>
                            <!-- offline status -->
                            <DataTrigger Binding="{Binding Path=IsOnline, Converter={StaticResource InverseBooleanConverter}}" Value="True">
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource UISecondaryBrush}"/>
                                <Setter Property="Text" 
                                        Value="{Binding Source={x:Static props:Resources.StatusOfflineText}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <!-- logout button -->
            <Button
                Grid.Column="3"
                Style="{StaticResource LeftPanelButtonStyle}"
                Cursor="Hand"
                IsTabStop="False"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Content="{Binding Source={x:Static props:Resources.ExitButtonText}}"
                Command="{Binding LogoutCommand}"
                />
        </Grid>

        <!-- select friend notify -->
        <TextBlock  
            Grid.Column="1"
            Grid.Row="1"
            Width="230"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            TextOptions.TextRenderingMode="ClearType"
            TextOptions.TextFormattingMode="Display"
            FontSize="22" 
            FontFamily="/CryptoMessenger;component/Resources/#Roboto Condensed Bold"
            Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
            TextWrapping="Wrap"
            TextAlignment="Center"
            Text="{Binding Source={x:Static props:Resources.SelectFriendNotification}}"
            Visibility="Visible"
            />

        <!-- panel -->
        <ContentControl 
            Grid.Column="0"
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Grid.RowSpan="2"
            IsTabStop="False"
            Content="{Binding WindowPanel}" 
            />
    </Grid>
</UserControl>
