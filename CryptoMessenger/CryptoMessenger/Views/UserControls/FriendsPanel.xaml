<UserControl 
    x:Class="CryptoMessenger.Views.UserControls.FriendsPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d" 
    xmlns:lb="clr-namespace:CryptoMessenger.Behaviors"
    xmlns:local="clr-namespace:CryptoMessenger.Views.UserControls"
    xmlns:props="clr-namespace:CryptoMessenger.Properties" 
    >
    <Grid Height="460">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- empty list notify -->
        <TextBlock
            Grid.Row="1"
            Grid.Column="0"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            TextOptions.TextRenderingMode="ClearType"
            TextOptions.TextFormattingMode="Display"
            FontSize="20" 
            Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
            Text="{Binding Source={x:Static props:Resources.EmptyFriendsListboxPlaceholder}}">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=friendsListbox, Path=Items.Count}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <!-- list of friends -->
        <ListBox
            x:Name="friendsListbox" 
            Grid.Row="2"
            Grid.Column="0"
            Style="{StaticResource ListBoxStyle}"
            ItemContainerStyle="{StaticResource ListBoxItemStyle}"
            ItemsSource="{Binding FriendsList}"
            IsTabStop="False"
            KeyboardNavigation.TabNavigation="None"
            SelectedValue="{Binding SelectedFriend}"
            Margin="20,10,10,20"  
            HorizontalContentAlignment="Stretch"
            >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Height="25">
                        <!-- friend's login -->
                        <TextBlock
                            x:Name="loginTextBlock"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            TextOptions.TextRenderingMode="ClearType"
                            TextOptions.TextFormattingMode="Display"
                            Foreground="{Binding Path=SecondarySecondBrush, Source={x:Static props:Settings.Default}}"
                            Text="{Binding Name}"
                            />
                        <!-- friend's status -->
                        <TextBlock
                            x:Name="statusTextBlock"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            TextOptions.TextRenderingMode="ClearType"
                            TextOptions.TextFormattingMode="Display"
                            FontSize="11"
                            />
                        <!-- remove from friends button -->
                        <Button 
                            x:Name="button"
                            Style="{StaticResource ListBoxButtonStyle}"
                            Cursor="Hand"
                            IsTabStop="False"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            Height="25" Width="25"
                            Foreground="White"
                            Command="{Binding Path=RemoveFriendCommand}"
                            ToolTip="{Binding Source={x:Static props:Resources.RemoveFriendButtonTooltip}}"
                            Visibility="Collapsed"
                            >
                            <Button.Background>
                                <ImageBrush ImageSource="/CryptoMessenger;component/Resources/cross.png"/>
                            </Button.Background>
                        </Button>
                    </Grid>

                    <DataTemplate.Triggers>
                        <!-- online status -->
                        <DataTrigger Binding="{Binding IsOnline}" Value="True">
                            <Setter TargetName="statusTextBlock" Property="Foreground" 
                                    Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                            <Setter TargetName="statusTextBlock" Property="Text" 
                                    Value="{Binding Source={x:Static props:Resources.StatusOnlineText}}"/>
                        </DataTrigger>
                        <!-- offline status -->
                        <DataTrigger Binding="{Binding Path=IsOnline, Converter={StaticResource InverseBooleanConverter}}" Value="True">
                            <Setter TargetName="statusTextBlock" Property="Foreground" 
                                    Value="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"/>
                            <Setter TargetName="statusTextBlock" Property="Text" 
                                    Value="{Binding Source={x:Static props:Resources.StatusOfflineText}}"/>
                        </DataTrigger>
                        <!-- on mouse hover -->
                        <DataTrigger
                            Binding="{Binding
                                RelativeSource={RelativeSource Mode=FindAncestor,
                                AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}"
                            Value="True"
                            >
                            <Setter TargetName="loginTextBlock" Property="Foreground" 
                                    Value="{Binding Path=SecondaryFirstBrush, Source={x:Static props:Settings.Default}}"/>
                            <Setter TargetName="statusTextBlock" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="button" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <!-- on selected item -->
                        <DataTrigger
                            Binding="{Binding
                                RelativeSource={RelativeSource Mode=FindAncestor,
                                AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                            Value="True"
                            >
                            <Setter TargetName="loginTextBlock" Property="Foreground" 
                                    Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>

                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- dialog -->
        <Grid
            Grid.Column="1"
            Grid.Row="0"
            Grid.RowSpan="2"
            Visibility="{Binding IsDialogVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
            >
            <!-- dialog panel -->
            <Border            
                Margin="10,36,20,120"
                RenderOptions.EdgeMode="Aliased"
                BorderBrush="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}" 
                BorderThickness="2 0 2 0"
                Background="{Binding Path=MainFirstBrush, Source={x:Static props:Settings.Default}}"
                >
                <Grid>
                    <!-- empty list notify -->
                    <TextBlock
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display"
                        FontSize="20" 
                        Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
                        Text="{Binding Source={x:Static props:Resources.EmptyDialogListboxPlaceholder}}"
                        >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=messagesListbox, Path=Items.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <!-- messages -->
                    <ListBox
                        x:Name="messagesListbox"
                        Style="{StaticResource ListBoxStyle}"
                        ItemContainerStyle="{StaticResource ListBoxItemStyle}"
                        ItemsSource="{Binding RepliesList}"
                        IsTabStop="False"
                        Margin="5,5,5,5"
                        Background="{Binding Path=MainFirstBrush, Source={x:Static props:Settings.Default}}"
                        HorizontalContentAlignment="Stretch"
                        ScrollViewer.CanContentScroll="False"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        lb:ListBoxBehavior.ScrollOnNewItem="true"
                        >
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VerticalAlignment="Bottom"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border
                                    BorderBrush="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}" 
                                    BorderThickness="0 0 0 1"
                                    >
                                    <Grid Margin="0,0,0,10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <!-- login -->
                                        <TextBox 
                                            Grid.Row="0"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Left"
                                            TextOptions.TextRenderingMode="ClearType"
                                            TextOptions.TextFormattingMode="Display"
                                            IsTabStop="False"
                                            Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
                                            SelectionBrush="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"
                                            SelectionOpacity="0.5"
                                            Text="{Binding Path=Author, Mode=OneWay}"
                                            TextWrapping="Wrap" 
                                            IsReadOnly="True"
                                            />
                                        <!-- time -->
                                        <TextBox
                                            Grid.Row="0"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Right"
                                            TextOptions.TextRenderingMode="ClearType"
                                            TextOptions.TextFormattingMode="Display"
                                            IsTabStop="False"
                                            Foreground="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}"
                                            SelectionBrush="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"
                                            SelectionOpacity="0.5"
                                            Text="{Binding Path=Time, StringFormat='yyyy-MM-dd HH:mm', Mode=OneWay}"
                                            TextWrapping="Wrap" 
                                            IsReadOnly="True"
                                            />
                                        <!-- message -->
                                        <TextBox
                                            Grid.Row="1"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Left"
                                            TextOptions.TextRenderingMode="ClearType"
                                            TextOptions.TextFormattingMode="Display"
                                            IsTabStop="False"
                                            Foreground="{Binding Path=SecondarySecondBrush, Source={x:Static props:Settings.Default}}"
                                            SelectionBrush="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"
                                            SelectionOpacity="0.5"
                                            TextWrapping="Wrap"
                                            TextAlignment="Left"
                                            Text="{Binding Path=Text, Mode=OneWay}"
                                            IsReadOnly="True"
                                            />
                                    </Grid>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsMyReply, Converter={StaticResource InverseBooleanConverter}}" Value="True">
                                                    <Setter Property="Background" 
                                                            Value="{Binding Path=MainFirstLightBrush, Source={x:Static props:Settings.Default}}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>

            <!-- message textbox -->
            <Border
                VerticalAlignment="Bottom"
                HorizontalAlignment="Stretch"
                Height="100"
                Margin="10,0,20,20"
                Padding="0,0,5,0"
                RenderOptions.EdgeMode="Aliased"
                BorderThickness="2"
                >
                <Grid>
                    <!-- message textbox -->
                    <TextBox
                        x:Name="msgTextbox"
                        Style="{StaticResource TextBoxStyle}"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Margin="0,0,40,0"
                        TextWrapping="Wrap"
                        AcceptsReturn="True"
                        VerticalScrollBarVisibility="Auto"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display"
                        IsTabStop="False"
                        Text="{Binding Path=MessageText, UpdateSourceTrigger=PropertyChanged}"
                        Tag="{Binding Source={x:Static props:Resources.MessageTextboxPlaceholder}}"
                        >
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding MessageEnterCommand}"/>
                            <KeyBinding Key="Enter" 
                                        Modifiers="Shift" 
                                        Command="{Binding MessageShiftEnterCommand}"
                                        CommandParameter="{Binding ElementName=msgTextbox}"
                                        />
                        </TextBox.InputBindings>
                    </TextBox>
                    <!-- send message button -->
                    <Button
                        x:Name="sendButton"
                        Style="{StaticResource ListBoxButtonStyle}"
                        Cursor="Hand"
                        IsTabStop="False"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Right"
                        Width="40"
                        Foreground="White"
                        Command="{Binding Path=SendCommand}"
                        ToolTip="{Binding Source={x:Static props:Resources.SendMessageButtonTooltip}}"
                        IsEnabled="{Binding Path=MessageText, Converter={StaticResource StringEmptynessToBooleanConverter}}"
                        >
                        <Button.Background>
                            <ImageBrush ImageSource="/CryptoMessenger;component/Resources/send.png"/>
                        </Button.Background>
                    </Button>
                </Grid>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="{Binding Path=MainSecondBrush, Source={x:Static props:Settings.Default}}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=msgTextbox}" Value="true">
                                <Setter Property="BorderBrush" Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=sendButton}" Value="true">
                                <Setter Property="BorderBrush" Value="{Binding Path=SpecialBrush, Source={x:Static props:Settings.Default}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>

    </Grid>
</UserControl>
